import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, NgModule, NgZone, ViewChild, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SimplemdeConfig = /** @class */ (function () {
    function SimplemdeConfig() {
        /**
         * 风格，默认：`antd`
         */
        this.style = 'antd';
    }
    return SimplemdeConfig;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SimplemdeComponent = /** @class */ (function () {
    function SimplemdeComponent(cog, cd, zone) {
        this.cog = cog;
        this.cd = cd;
        this.zone = zone;
        this.style = cog.style;
        this.delay = cog.delay || 0;
    }
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype.initDelay = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.delay > 0) {
            setTimeout(function () { return _this.init(); }, this.delay);
        }
        else {
            this.init();
        }
    };
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype.init = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (typeof SimpleMDE === 'undefined') {
            throw new Error("Could not find SimpleMDE object.");
        }
        this.destroy();
        var /** @type {?} */ config = Object.assign({}, this.cog, this.options, this.style === 'antd'
            ? {
                spellChecker: false,
                autoDownloadFontAwesome: false,
            }
            : {});
        config.element = this.con.nativeElement;
        this.zone.runOutsideAngular(function () {
            _this.instance = new SimpleMDE(config);
            if (_this.value) {
                _this.instance.value(_this.value);
            }
            _this.instance.codemirror.on('change', function () {
                _this.value = _this.instance.value();
                _this.zone.run(function () { return _this.onChange(_this.value); });
            });
        });
    };
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype.destroy = /**
     * @return {?}
     */
    function () {
        if (this.instance) {
            this.instance.toTextArea();
            this.instance = null;
        }
    };
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initDelay();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SimplemdeComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (!changes.options.firstChange)
            this.initDelay();
    };
    Object.defineProperty(SimplemdeComponent.prototype, "Instance", {
        /**
         * 获取UE实例
         *
         * @readonly
         */
        get: /**
         * 获取UE实例
         *
         * \@readonly
         * @return {?}
         */
        function () {
            return this.instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroy();
    };
    // reuse-tab: http://ng-alain.com/components/reuse-tab#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F
    /**
     * @return {?}
     */
    SimplemdeComponent.prototype._onReuseInit = /**
     * @return {?}
     */
    function () {
        this.initDelay();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    SimplemdeComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.value = value;
        if (this.instance) {
            this.instance.value(this.value);
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SimplemdeComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    SimplemdeComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    SimplemdeComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) { };
    SimplemdeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'simplemde',
                    template: "<textarea #con></textarea>",
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return SimplemdeComponent; }),
                            multi: true,
                        },
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                },] },
    ];
    /** @nocollapse */
    SimplemdeComponent.ctorParameters = function () { return [
        { type: SimplemdeConfig, },
        { type: ChangeDetectorRef, },
        { type: NgZone, },
    ]; };
    SimplemdeComponent.propDecorators = {
        "con": [{ type: ViewChild, args: ['con',] },],
        "options": [{ type: Input },],
        "style": [{ type: Input },],
        "delay": [{ type: Input },],
    };
    return SimplemdeComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SimplemdeModule = /** @class */ (function () {
    function SimplemdeModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    SimplemdeModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: SimplemdeModule,
            providers: [{ provide: SimplemdeConfig, useValue: config }],
        };
    };
    SimplemdeModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule],
                    declarations: [SimplemdeComponent],
                    exports: [SimplemdeComponent],
                },] },
    ];
    return SimplemdeModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { SimplemdeComponent, SimplemdeConfig, SimplemdeModule };
//# sourceMappingURL=simplemde.js.map
