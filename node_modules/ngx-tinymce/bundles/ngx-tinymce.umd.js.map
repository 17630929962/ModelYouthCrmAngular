{"version":3,"file":"ngx-tinymce.umd.js.map","sources":["ng://ngx-tinymce/src/tinymce.options.ts","ng://ngx-tinymce/src/tinymce.script.service.ts","ng://ngx-tinymce/src/tinymce.component.ts","ng://ngx-tinymce/src/tinymce.module.ts","ng://ngx-tinymce/ngx-tinymce.ts"],"sourcesContent":["export class TinymceOptions {\r\n  /** æå®tinymceç®å½è·¯å¾ï¼é»è®¤ï¼`./assets/tinymce/` */\r\n  baseURL ? = './assets/tinymce/';\r\n  /** æå®tinymceæä»¶åï¼é»è®¤ï¼`tinymce.min.js` */\r\n  fileName ? = 'tinymce.min.js';\r\n  /** é»è®¤éç½®é¡¹ï¼å¯¹å¨å± Tinymce ææ */\r\n  config?: any;\r\n  /** å»¶è¿å è½½ï¼åä½ï¼æ¯«ç§ï¼ï¼é»è®¤ï¼`0` */\r\n  delay?: number;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ScriptService {\r\n  private loaded = false;\r\n  private list: any = {};\r\n  private emitter: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(@Inject(DOCUMENT) private doc: any) {}\r\n\r\n  getChangeEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  load(path: string) {\r\n    if (this.loaded) {\r\n      return this;\r\n    }\r\n\r\n    this.loaded = true;\r\n\r\n    const promises: Promise<any>[] = [];\r\n\r\n    [path].forEach(script => promises.push(this.loadScript(script)));\r\n\r\n    Promise.all(promises).then(res => {\r\n      this.emitter.next(true);\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  loadScript(path: string): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.list[path] === true) {\r\n        resolve(<any>{\r\n          path: path,\r\n          loaded: true,\r\n          status: 'Loaded',\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.list[path] = true;\r\n\r\n      const node = this.doc.createElement('script');\r\n      node.type = 'text/javascript';\r\n      node.src = path;\r\n      node.charset = 'utf-8';\r\n      if ((<any>node).readyState) {\r\n        // IE\r\n        (<any>node).onreadystatechange = () => {\r\n          if (\r\n            (<any>node).readyState === 'loaded' ||\r\n            (<any>node).readyState === 'complete'\r\n          ) {\r\n            (<any>node).onreadystatechange = null;\r\n            resolve(<any>{\r\n              path: path,\r\n              loaded: true,\r\n              status: 'Loaded',\r\n            });\r\n          }\r\n        };\r\n      } else {\r\n        node.onload = () => {\r\n          resolve(<any>{\r\n            path: path,\r\n            loaded: true,\r\n            status: 'Loaded',\r\n          });\r\n        };\r\n      }\r\n      node.onerror = (error: any) =>\r\n        resolve(<any>{\r\n          path: path,\r\n          loaded: false,\r\n          status: 'Loaded',\r\n        });\r\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  TemplateRef,\r\n  SimpleChanges,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { ScriptService } from './tinymce.script.service';\r\nimport { TinymceOptions } from './tinymce.options';\r\n\r\ndeclare const window: any;\r\ndeclare const tinymce: any;\r\n\r\n@Component({\r\n  selector: 'tinymce',\r\n  template: `\r\n  <textarea id=\"{{id}}\" class=\"tinymce-selector\"></textarea>\r\n  <div class=\"loading\" *ngIf=\"load\">\r\n    <ng-container *ngIf=\"_loading; else _loadingTpl\">{{_loading}}</ng-container>\r\n  </div>\r\n  `,\r\n  preserveWhitespaces: false,\r\n  styles: [\r\n    `\r\n      :host .tinymce-selector {\r\n        display: none;\r\n      }\r\n    `,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TinymceComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TinymceComponent\r\n  implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {\r\n  private instance: any;\r\n  private value: string;\r\n  private inited = false;\r\n  load = true;\r\n  id = `_tinymce-${Math.random()\r\n    .toString(36)\r\n    .substring(2)}`;\r\n\r\n  private onChange: (value: string) => void;\r\n  private onTouched: () => void;\r\n\r\n  @Input()\r\n  config: any;\r\n  @Input()\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n    this.setDisabled();\r\n  }\r\n  private _disabled = false;\r\n\r\n  _loading: string;\r\n  _loadingTpl: TemplateRef<any>;\r\n  @Input()\r\n  set loading(value: string | TemplateRef<any>) {\r\n    if (value instanceof TemplateRef) this._loadingTpl = value;\r\n    else this._loading = value;\r\n  }\r\n\r\n  /** å»¶è¿åå§å */\r\n  @Input()\r\n  delay = 0;\r\n\r\n  constructor(\r\n    private defConfig: TinymceOptions,\r\n    private ss: ScriptService,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone,\r\n  ) {}\r\n\r\n  private initDelay() {\r\n    if (this.delay > 0) {\r\n      setTimeout(() => this.init(), this.delay);\r\n    } else {\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  private init() {\r\n    if (!window.tinymce) throw new Error('tinymce jsæä»¶å è½½å¤±è´¥');\r\n\r\n    const { defConfig, config, id } = this;\r\n    if (this.instance) return;\r\n\r\n    if (defConfig.baseURL) {\r\n      let url = '' + defConfig.baseURL;\r\n      if (url.endsWith('/')) url = url.substr(0, url.length - 1);\r\n      tinymce.baseURL = url;\r\n    }\r\n\r\n    const userOptions = Object.assign({}, defConfig.config, config);\r\n\r\n    const options = Object.assign(\r\n      {\r\n        selector: `#` + id,\r\n      },\r\n      defConfig.config,\r\n      config,\r\n      {\r\n        setup: (editor: any) => {\r\n          this.instance = editor;\r\n          editor.on('change keyup', () => {\r\n            this.value = editor.getContent();\r\n            this.zone.run(() => this.onChange(this.value));\r\n          });\r\n          if (typeof userOptions.setup === 'function') {\r\n            userOptions.setup(editor);\r\n          }\r\n        },\r\n        init_instance_callback: (editor: any) => {\r\n          if (editor && this.value) editor.setContent(this.value);\r\n          this.setDisabled();\r\n          if (typeof userOptions.init_instance_callback === 'function') {\r\n            userOptions.init_instance_callback(editor);\r\n          }\r\n        },\r\n      },\r\n    );\r\n    if (userOptions.auto_focus) {\r\n      options.auto_focus = id;\r\n    }\r\n\r\n    tinymce.init(options);\r\n\r\n    this.load = false;\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  private destroy() {\r\n    if (!this.instance) {\r\n      return;\r\n    }\r\n    this.instance.off();\r\n    this.instance.remove('#' + this.id);\r\n    this.instance = null;\r\n  }\r\n\r\n  private setDisabled() {\r\n    if (!this.instance) return;\r\n    this.instance.setMode(this._disabled ? 'readonly' : 'design');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inited = true;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // å·²ç»å­å¨å¯¹è±¡æ é¡»è¿å¥æå è½½æ¨¡å¼\r\n    if (window.tinymce) {\r\n      this.initDelay();\r\n      return;\r\n    }\r\n\r\n    const { defConfig } = this;\r\n    const baseURL = defConfig && defConfig.baseURL;\r\n    const fileName = defConfig && defConfig.fileName;\r\n    this.ss\r\n      .load((baseURL || './assets/tinymce/') + (fileName || 'tinymce.min.js'))\r\n      .getChangeEmitter()\r\n      .subscribe(() => this.initDelay());\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.inited && changes.config) {\r\n      this.destroy();\r\n      this.initDelay();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  // reuse-tab: http://ng-alain.com/components/reuse-tab#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\r\n  _onReuseInit() {\r\n    this.destroy();\r\n    this.initDelay();\r\n  }\r\n\r\n  writeValue(value: string): void {\r\n    // value should be NOT NULL\r\n    this.value = value || '';\r\n    if (this.instance) {\r\n      this.instance.setContent(this.value);\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => {}): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: () => {}): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.setDisabled();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TinymceOptions } from './tinymce.options';\r\nimport { TinymceComponent } from './tinymce.component';\r\nimport { ScriptService } from './tinymce.script.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TinymceComponent],\r\n  exports: [TinymceComponent],\r\n})\r\nexport class NgxTinymceModule {\r\n  static forRoot(options: TinymceOptions): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxTinymceModule,\r\n      providers: [\r\n        ScriptService,\r\n        { provide: TinymceOptions, useValue: options },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ScriptService as Éµa} from './src/tinymce.script.service';"],"names":["Subject","Injectable","Inject","DOCUMENT","TemplateRef","Component","NG_VALUE_ACCESSOR","forwardRef","ChangeDetectionStrategy","ChangeDetectorRef","NgZone","Input","NgModule","CommonModule"],"mappings":"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"}
